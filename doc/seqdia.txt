title Entity creation

note over User, Engine: Facade

User->+Engine: create entity
Engine->+EntityManager: create entity

EntityManager->EntityManager: pick next entity id
EntityManager->EntityManager: get entity from pool
EntityManager-->-Engine: entity

Engine-->-User: entity



#########################################################################################################
title Entity deletion

note over User, Engine: Facade

User->+Engine: remove entity

loop foreach entity system
    Engine->EntitySystem: notify entity removed

    opt if system accepts entity
        EntitySystem-->EntitySystem: remove entity
    end
end

Engine->+ComponentManager: remove all components

loop foreach component
    ComponentManager-->ComponentManager: free component memory
    ComponentManager-->ComponentManager: clear component bit
end

Engine->+EntityManager: remove entity

EntityManager-->EntityManager: return entity id to pool


#########################################################################################################
title Processing entity deletion (game logic step)

loop foreach component addition edits

    loop foreach subscription
        opt if subscription accepts entity
            EntityProcessor->+EntitySubscription: notify entity removed
            EntitySubscription->EntitySubscription: add entity to list
            EntitySubscription->+SubscriptionListener: notify entity addition
            SubscriptionListener-->-EntitySubscription:
            EntitySubscription-->-EntityProcessor:
        end
    end

    EntityProcessor->+EntityManager: entity removed
    EntityManager->EntityManager: recycle entity id
    EntityManager-->-EntityProcessor:
    EntityProcessor->+ComponentManager: entity removed
    ComponentManager->ComponentManager: destroy all components
    ComponentManager-->-EntityProcessor:
end



#########################################################################################################
title Component addition (game logic step)

note over User, Engine: Facade

User->+Engine: add component
Engine->+EntityProcessor: entity component added

EntityProcessor->+EntityComponentAddition: <<new>>(entity)
EntityComponentAddition-->-EntityProcessor: entityEdit

EntityProcessor-->-EntityProcessor: store

Engine-->-User: component



#########################################################################################################
title Processing addition component edits (post game logic step)

note over EntityProcessor, EntityManager,EntitySubscription,SubscriptionListener: the component was created in the game logic step, so only notification and bits update are needed

loop foreach component addition edits

    EntityProcessor->+EntityManager: add component bit to entity
    EntityManager-->-EntityProcessor:

    loop foreach entity subscription
        opt if entity subscription accepts entity
            EntityProcessor->+EntitySubscription: notify entity addition
            EntitySubscription->EntitySubscription: add entity to list
            EntitySubscription->+SubscriptionListener: notify entity addition
            SubscriptionListener-->-EntitySubscription:
            EntitySubscription-->-EntityProcessor:
        end
    end
end

## TODO: use multiple listeners instead of a single one.


#########################################################################################################
title Component deletion (game logic step)

note over User, Engine: Facade

User->+Engine: remove component
Engine->+EntityProcessor: entity component removed

EntityProcessor->+EntityComponentDeletion: <<new>>(entity)
EntityComponentDeletion-->-EntityProcessor: entityEdit

EntityProcessor-->-EntityProcessor: store



#########################################################################################################
title Processing remove component edits (post game logic step)

Engine->+EntityProcessor: get remove component edits
EntityProcessor-->-Engine:

loop foreach component deletion edits
    Engine->+ComponentManager: remove component from entity
    ComponentManager->ComponentManager: free the component from the pool
    ComponentManager-->-Engine:

    loop foreach entity subscription
        opt if entity subscription accepts entity
            Engine->+EntitySubscription: notify entity deletion
            loop foreach listener
                EntitySubscription->+SubscriptionListener: notify entity deletion
                SubscriptionListener-->-EntitySubscription:
            end
            EntitySubscription-->-Engine:
        end
    end
    Engine->+EntityManager: remove component bit from entity
    EntityManager-->-Engine:
end
